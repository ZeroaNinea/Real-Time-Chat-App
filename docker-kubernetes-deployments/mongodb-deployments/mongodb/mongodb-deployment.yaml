apiVersion: apps/v1 # Defines the API version.
kind: Deployment # This is a Deployment.
metadata:
  name: mongodb-deployment # Name.
  namespace: mongodb-express
  labels:
    app: mongodb # Use MongoDB.
spec:
  replicas: 1 # Contains one Pod.
  selector:
    matchLabels:
      app: mongodb # The Deployment will menage Pods with the lable `app: mongodb`.
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:8.0 # MongoDB image.
          args: ["--bind_ip", "0.0.0.0"] # Listen all network interfaces. It's impossible to connect with `nodePort` without this setup.
          resources:
            limits:
              memory: "512Mi" # Specifies the max memory.
              cpu: "500m" # Specifies the max CPU.
          ports:
            - containerPort: 27017 # Container's port.
          env:
            # Uses the environment variables from the `mongodb-scret.yaml` file.
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-password
            # - name: MONGO_BIND_IP
            #   value: 0.0.0.0

          # Kubernetes checks if MongoDB is running before sending traffic.
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10

          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10

          # Create a presistent volume claim to store MongoDB data.
          volumeMounts:
            - name: mongodb-storage
              mountPath: /data/db

      volumes:
        - name: mongodb-storage
          persistentVolumeClaim:
            claimName: mongodb-pvc

# To open MongoDB shell.
# kubectl exec -it mongodb-deployment-677b68df9d-mldjz -n mongodb-express -- mongosh -u username -p password --authenticationDatabase admin
